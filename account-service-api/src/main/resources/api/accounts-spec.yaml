openapi: 3.0.2
info:
  title: Accounts Service
  description: Services to support accounts data
  version: 0.0.1
paths:
  /accounts:
    get:
      tags:
        - accounts
      summary: Retrieves account objects
      operationId: findAllAccounts
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        200:
          description: Successfully get objects
          content:
            application/json:
              schema:
                type: array
                description: Found account objects
                items:
                  $ref: '#/components/schemas/Account'
        default:
          $ref: '#/components/responses/Error'
    post:
      tags:
        - accounts
      summary: Adds a new account
      operationId: addAccount
      requestBody:
        description: Account object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
        required: true
      responses:
        201:
          description: Created account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          $ref: '#/components/responses/InvalidInput'
        default:
          $ref: '#/components/responses/Error'
  /accounts/{accountId}:
    get:
      tags:
        - accounts
      summary: Retrieves a single account by id
      operationId: findAccountById
      parameters:
        - $ref: '#/components/parameters/accountId'
      responses:
        200:
          description: An account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        404:
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Error'
    patch:
      tags:
        - accounts
      summary: Updates an account
      operationId: updateAccount
      parameters:
        - $ref: '#/components/parameters/accountId'
      requestBody:
        description: Fields to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccount'
        required: true
      responses:
        204:
          description: Updated
          content: {}
        404:
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Error'
    delete:
      tags:
        - accounts
      summary: Deletes an account
      operationId: deleteAccount
      parameters:
        - $ref: '#/components/parameters/accountId'
      responses:
        204:
          description: Deleted
          content: {}
        404:
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Error'
components:
  schemas:
    Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    AccountId:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: Unique account ID
          format: int64
    AccountProperties:
      required:
        - name
        - email
        - balance
      type: object
      properties:
        name:
          type: string
          description: Name of the customer
          example: John
        email:
          type: string
          description: Email
          example: johnsnow@thewall.com
        balance:
          type: number
          description: Customer balance in USD
          example: 150.00
    Account:
      allOf:
        - $ref: '#/components/schemas/AccountId'
        - $ref: '#/components/schemas/AccountProperties'
    CreateAccount:
      allOf:
        - $ref: '#/components/schemas/AccountProperties'
    UpdateAccount:
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        balance:
          nullable: true
          type: number
  responses:
    Error:
      description: Error accessing the service consistent with http status code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidInput:
      description: Invalid input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Unable to find resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    accountId:
      name: accountId
      in: path
      description: Account ID
      required: true
      schema:
        type: integer
        format: int64
    page:
      name: page
      in: query
      description: The number of results page
      schema:
        type: integer
        format: int32
        default: 0
    limit:
      name: limit
      in: query
      description: The number of results in a single page
      schema:
        type: integer
        format: int32
        default: 100
